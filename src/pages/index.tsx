import Head from "next/head";
import Image from "next/image";

import { RouterOutputs, api } from "~/utils/api";

import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/loading";
import { useState } from "react";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const utils = api.useUtils();
  const { mutate, isLoading: isPosting } = api.post.create.useMutation({
    onSuccess: () => {
      setInput("");
      utils.post.getAll.invalidate();
    },
  });

  const { user } = useUser();
  const [input, setInput] = useState("");

  // console.log(user);

  if (!user) return null;

  return (
    <div className="flex gap-4">
      <Image
        className=" rounded-full"
        src={user.imageUrl}
        width={50}
        height={50}
        alt="user image"
      />
      <input
        className=" grow bg-transparent outline-none"
        placeholder={isPosting ? "Posting..." : "Type some emojis!"}
        type="text"
        value={input}
        disabled={isPosting}
        onChange={(e) => setInput(e.target.value)}
      />
      <button onClick={() => mutate({ content: input })}>Post</button>
    </div>
  );
};

type PostWithAuthor = RouterOutputs["post"]["getAll"][number];

const PostView = (props: PostWithAuthor) => {
  const { post, author } = props;
  return (
    <ul>
      <div className="flex gap-3 border-b border-slate-200 p-4" key={post.id}>
        <div>
          <Image
            className=" rounded-full"
            height={44}
            width={44}
            src={author.imageUrl}
            alt="author image"
          />
        </div>
        <div className="flex flex-col">
          <p>
            {`@${author.username}  Â· `}
            <span className=" font-extralight">
              {`${dayjs(post.createdAt).fromNow()}`}
            </span>
          </p>
          <div className="text-4xl">{post.content}</div>
        </div>
      </div>
    </ul>
  );
};

const Feed = () => {
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <LoadingPage />;
  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      {data.map((post) => (
        <PostView key={post.post.id} {...post} />
      ))}
    </>
  );
};

export default function Home() {
  // start loading posts
  api.post.getAll.useQuery();

  const { isSignedIn: userSignedIn } = useUser();

  return (
    <>
      <Head>
        <title>Emojigram</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" container mx-auto flex justify-center">
        {userSignedIn && (
          <div className="flex h-screen w-full flex-col border-x border-slate-200">
            <div className="border p-4">
              <CreatePostWizard />
            </div>

            <Feed />

            {/* <div className="flex content-center">
              <button className="h-10 rounded-full bg-red-400 px-3 text-slate-700">
                <SignOutButton />
              </button>
            </div> */}
          </div>
        )}

        {!userSignedIn && (
          <button className=" rounded-full bg-green-400 px-3 text-slate-700">
            <SignInButton />
          </button>
        )}
      </main>
    </>
  );
}
